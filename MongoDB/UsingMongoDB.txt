1- Create a database called 'my_first_db'.
use my_first_db
switched to db my_first_db

2-Create students collection.
db.createCollection("students")
{ "ok" : 1 }

3- Create 5 students with the appropriate info.({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

db.students.insertMany([
  {
    name: "Student1",
    home_state: "California",
    lucky_number: 10,
    birthday: { month: 1, day: 15, year: 2000 }
  },
  {
    name: "Student2",
    home_state: "Washington",
    lucky_number: 5,
    birthday: { month: 3, day: 8, year: 1999 }
  },
  {
    name: "Student3",
    home_state: "Washington",
    lucky_number: 7,
    birthday: { month: 6, day: 12, year: 1998 }
  },
  {
    name: "Student4",
    home_state: "Washington",
    lucky_number: 9,
    birthday: { month: 7, day: 23, year: 1997 }
  },
  {
    name: "Student5",
    home_state: "Washington",
    lucky_number: 10,
    birthday: { month: 11, day: 5, year: 1996 }
  },
])

{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("64dcd40b2c415a254522fa9e"),
                ObjectId("64dcd40b2c415a254522fa9f"),
                ObjectId("64dcd40b2c415a254522faa0"),
                ObjectId("64dcd40b2c415a254522faa1"),
                ObjectId("64dcd40b2c415a254522faa2")
        ]
}

4- Get all students.
db.students.find()
{ "_id" : ObjectId("64dcd40b2c415a254522fa9e"), "name" : "Student1", "home_state" : "California", "lucky_number" : 10, "birthday" : { "month" : 1, "day" : 15, "year" : 2000 } }
{ "_id" : ObjectId("64dcd40b2c415a254522fa9f"), "name" : "Student2", "home_state" : "Washington", "lucky_number" : 5, "birthday" : { "month" : 3, "day" : 8, "year" : 1999 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa0"), "name" : "Student3", "home_state" : "Washington", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 12, "year" : 1998 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa1"), "name" : "Student4", "home_state" : "Washington", "lucky_number" : 9, "birthday" : { "month" : 7, "day" : 23, "year" : 1997 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa2"), "name" : "Student5", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 11, "day" : 5, "year" : 1996 } }

5- Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
db.students.find({ $or: [{ home_state: "California" }, { home_state: "Washington" }] })
{ "_id" : ObjectId("64dcd40b2c415a254522fa9e"), "name" : "Student1", "home_state" : "California", "lucky_number" : 10, "birthday" : { "month" : 1, "day" : 15, "year" : 2000 } }
{ "_id" : ObjectId("64dcd40b2c415a254522fa9f"), "name" : "Student2", "home_state" : "Washington", "lucky_number" : 5, "birthday" : { "month" : 3, "day" : 8, "year" : 1999 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa0"), "name" : "Student3", "home_state" : "Washington", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 12, "year" : 1998 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa1"), "name" : "Student4", "home_state" : "Washington", "lucky_number" : 9, "birthday" : { "month" : 7, "day" : 23, "year" : 1997 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa2"), "name" : "Student5", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 11, "day" : 5, "year" : 1996 } }

6- Get students with lucky number greater than 3:

{ "_id" : ObjectId("64dcd40b2c415a254522fa9e"), "name" : "Student1", "home_state" : "California", "lucky_number" : 10, "birthday" : { "month" : 1, "day" : 15, "year" : 2000 } }
{ "_id" : ObjectId("64dcd40b2c415a254522fa9f"), "name" : "Student2", "home_state" : "Washington", "lucky_number" : 5, "birthday" : { "month" : 3, "day" : 8, "year" : 1999 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa0"), "name" : "Student3", "home_state" : "Washington", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 12, "year" : 1998 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa1"), "name" : "Student4", "home_state" : "Washington", "lucky_number" : 9, "birthday" : { "month" : 7, "day" : 23, "year" : 1997 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa2"), "name" : "Student5", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 11, "day" : 5, "year" : 1996 } }

7- Get students with lucky number less than or equal to 10:

{ "_id" : ObjectId("64dcd40b2c415a254522fa9e"), "name" : "Student1", "home_state" : "California", "lucky_number" : 10, "birthday" : { "month" : 1, "day" : 15, "year" : 2000 } }
{ "_id" : ObjectId("64dcd40b2c415a254522fa9f"), "name" : "Student2", "home_state" : "Washington", "lucky_number" : 5, "birthday" : { "month" : 3, "day" : 8, "year" : 1999 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa0"), "name" : "Student3", "home_state" : "Washington", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 12, "year" : 1998 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa1"), "name" : "Student4", "home_state" : "Washington", "lucky_number" : 9, "birthday" : { "month" : 7, "day" : 23, "year" : 1997 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa2"), "name" : "Student5", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 11, "day" : 5, "year" : 1996 } }

8- db.students.find({ lucky_number: { $gte: 1, $lte: 9 } })

{ "_id" : ObjectId("64dcd40b2c415a254522fa9f"), "name" : "Student2", "home_state" : "Washington", "lucky_number" : 5, "birthday" : { "month" : 3, "day" : 8, "year" : 1999 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa0"), "name" : "Student3", "home_state" : "Washington", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 12, "year" : 1998 } }
{ "_id" : ObjectId("64dcd40b2c415a254522faa1"), "name" : "Student4", "home_state" : "Washington", "lucky_number" : 9, "birthday" : { "month" : 7, "day" : 23, "year" : 1997 } }


9- Add 'interests' field to all students:
db.students.updateMany({}, { $set: { interests: ['coding', 'brunch', 'MongoDB'] } })
{ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 5 }

10- Add unique interests to each student:
db.students.updateOne({ name: "Student1" }, { $push: { interests: 'hiking' } })
db.students.updateOne({ name: "Student2" }, { $push: { interests: 'painting' } })
db.students.updateOne({ name: "Student3" }, { $push: { interests: 'swimming' } })
db.students.updateOne({ name: "Student4" }, { $push: { interests: 'gaming' } })
db.students.updateOne({ name: "Student5" }, { $push: { interests: 'shooting' } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

10 - Add the interest 'taxes' into someone's interest array.
db.students.updateOne({ name: "Student1" }, { $push: { interests: 'taxes' } })

11- Remove the 'taxes' interest you just added.
db.students.updateOne({ name: "Student1" }, { $pull: { interests: 'taxes' } })

12- Remove students from California:
db.students.deleteMany({ home_state: "California" })
{ "acknowledged" : true, "deletedCount" : 1 }

13- Remove a student by name.
db.students.deleteOne({ name: "Student3" })
{ "acknowledged" : true, "deletedCount" : 1 }

14- Remove a student whose lucky number is greater than 5 (JUST ONE)
db.students.deleteOne({ lucky_number: { $gt: 5 } })
{ "acknowledged" : true, "deletedCount" : 1 }

15- Add a field to each student document called 'number_of_belts' and set it to 0.
db.students.updateMany({}, { $set: { number_of_belts: 0 } })

16- Increment this field by 1 for all students in Washington (Seattle Dojo).
db.students.updateMany({ home_state: "Washington" }, { $inc: { number_of_belts: 1 } })
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }

17- Rename the 'number_of_belts' field to 'belts_earned'
db.students.updateMany({}, { $rename: { number_of_belts: "belts_earned" } })
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }

18- Remove the 'lucky_number' field.
db.students.updateMany({}, { $unset: { lucky_number: "" } })
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }
19- Add a 'updated_on' field, and set the value as the current date.
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }

final result :

{
        "_id" : ObjectId("64dcd40b2c415a254522fa9f"),
        "name" : "Student2",
        "home_state" : "Washington",
        "birthday" : {
                "month" : 3,
                "day" : 8,
                "year" : 1999
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
                "painting"
        ],
        "belts_earned" : 1,
        "updated_on" : ISODate("2023-08-16T14:11:06.197Z")
}
{
        "_id" : ObjectId("64dcd40b2c415a254522faa2"),
        "name" : "Student5",
        "home_state" : "Washington",
        "birthday" : {
                "month" : 11,
                "day" : 5,
                "year" : 1996
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
                "shooting"
        ],
        "belts_earned" : 1,
        "updated_on" : ISODate("2023-08-16T14:11:06.197Z")
}